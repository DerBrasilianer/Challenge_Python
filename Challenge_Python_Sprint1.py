import os
import re
import random


mecanicos = [{'nome': 'Auto Conserto', 'categoria': 'Conserto', 'avalia√ß√£o': '4.8', 'or√ßamento': 'R$423', 'endere√ßo': 'Rua Computer Thinking, 123', 'aberto':True},
            {'nome': 'Pe√ßas+', 'categoria': 'Venda de Pe√ßas', 'avalia√ß√£o': '4.8', 'or√ßamento': 'R$387', 'endere√ßo': 'Avenida Front-End, 456', 'aberto':False},
            {'nome': 'Mec√¢nico 24h', 'categoria': 'Conserto e Venda de Pe√ßas', 'avalia√ß√£o': '4.8', 'or√ßamento': 'R$456', 'endere√ßo': 'Rua dos Javas, 789', 'aberto':True},
            {'nome': 'Oficina do Jo√£o', 'categoria': 'Conserto', 'avalia√ß√£o': '4.7', 'or√ßamento': 'R$399', 'endere√ßo': 'Rua das Startups, 1010', 'aberto':True},
            {'nome': 'Auto Pe√ßas e Servi√ßos', 'categoria': 'Venda de Pe√ßas e Conserto', 'avalia√ß√£o': '4.9', 'or√ßamento': 'R$499', 'endere√ßo': 'Avenida da Inova√ß√£o, 2020', 'aberto':True},
            {'nome': 'Mec√¢nica Express', 'categoria': 'Conserto', 'avalia√ß√£o': '3.8', 'or√ßamento': 'R$350', 'endere√ßo': 'Rua do Desenvolvimento, 3030', 'aberto':False}]



def efetuar_login():
    print("[Considerando um usu√°rio j√° cadastrado]")

    while True:
        cpf = input("\nCPF (000.000.000-00): ")

        if re.match(r"\d{3}\.\d{3}\.\d{3}-\d{2}", cpf):
            senha = input("Senha: ")
            entrar_no_menu_principal()
            break
        else:
            os.system('cls')
            print("CPF inv√°lido. Digite um CPF v√°lido.")


def exibir_nome_do_programa ():
    print('''
‚ñà‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ÄÉ ‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñë‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÄ‚ÄÉ‚ñà‚ñÄ‚ñà
‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñÑ‚ñà‚ÄÉ ‚ÄÉ‚ñà‚ñë‚ñÄ‚ñë‚ñà‚ÄÉ‚ñà‚ñà‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñÄ‚ñà‚ÄÉ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÑ‚ÄÉ‚ñà‚ñÑ‚ñà  ùô¥ùöñ ùöåùöòùöïùöäùöãùöòùöõùöäùöåÃßùöäÃÉùöò ùöåùöòùöñ a Porto Seguro
       ''')


def exibir_opcoes ():
    print('1. Atendimento Online')
    print('2. Listar Mec√¢nicos na √Årea')
    print('3. Cadastrar Mec√¢nico')
    print('4. Chamar Reboque')
    print('5. Sair\n')


def escolher_opcoes ():
    
    try: 
        opcao_escolhida = int(input ('Escolha uma op√ß√£o: '))

        if opcao_escolhida == 1:
            atendimento_online()
        elif opcao_escolhida == 2:
            listar_mecanicos()
        elif opcao_escolhida == 3:
            cadastrar_novo_mecanico ()
        elif opcao_escolhida == 4:
            chamar_reboque()
        elif opcao_escolhida == 5:
            finalizar_app()
        else:
            opcao_invalida()
    except:
        opcao_invalida()


def atendimento_online():
    os.system('cls')
    exibir_subtitulo('Iniciando Atendimento...')
    
    modelo_carro = input("Qual o modelo do seu carro? ")
    montadora = input("Qual a montadora do seu carro? ")
    ano_fabricacao = input("Qual o ano de fabrica√ß√£o do seu carro? ")
    problema = input("Descreva o problema que voc√™ est√° enfrentando: ")

    os.system('cls')
    print (f'Dados do ve√≠culo: Modelo: {modelo_carro}, Montadora: {montadora}, Ano: {ano_fabricacao} [Ap√≥s conseguir as informa√ß√µes necess√°rias e a descri√ß√£o do problema, o chatbot ir√° apresentar a resposta que ele acredita ser a mais prov√°vel para a causa do problema e exibir√° a lista de mec√¢nicos na √°rea, assim como os mec√¢nicos manualmente cadastrados pelo usu√°rio.]')

    # √â bom notar que, com exce√ß√£o das informa√ß√µes sobre o ve√≠culo em si, √© o usu√°rio que ir√° explicar qual √© o problema. Lendo o feedback, talvez o foco nas perguntas tenha dado a impress√£o de que o chatbot faria pergunta por pergunta. Esse n√£o √© o caso, pe√ßo desculpas pela impress√£o, as perguntas foram colocadas para que o programa n√£o simplesmente descrevesse o processo por print(), mas sim para que tentasse recri√°-lo.

    print('\nListando mec√¢nicos na sua √°rea:')
    print()

    for mecanico in mecanicos:
        nome_mecanico = mecanico ['nome']
        categoria_mecanico = mecanico ['categoria']
        avaliacao_mecanico = mecanico ['avalia√ß√£o']
        orcamento_mecanico = mecanico ['or√ßamento']
        endereco_mecanico = mecanico ['endere√ßo']
        ativo = 'Sim' if mecanico ['aberto'] == True else 'N√£o'
        print(f'- {nome_mecanico} | {categoria_mecanico} | {avaliacao_mecanico} | {orcamento_mecanico} | {endereco_mecanico} | Aberto: {ativo}')

    voltar_ao_menu_principal()


def listar_mecanicos():
    exibir_subtitulo('Listando Mec√¢nicos na sua √°rea')

    for mecanico in mecanicos:
        nome_mecanico = mecanico ['nome']
        categoria_mecanico = mecanico ['categoria']
        avaliacao_mecanico = mecanico ['avalia√ß√£o']
        orcamento_mecanico = mecanico ['or√ßamento']
        endereco_mecanico = mecanico ['endere√ßo']
        ativo = 'Sim' if mecanico ['aberto'] == True else 'N√£o'
        print(f'- {nome_mecanico} | {categoria_mecanico} | Avalia√ß√£o: {avaliacao_mecanico} | {orcamento_mecanico} | {endereco_mecanico} | Aberto: {ativo}')

    voltar_ao_menu_principal()


def cadastrar_novo_mecanico():
    exibir_subtitulo('''Cadastro de novos mec√¢nicos
    Caso tenha prefer√™ncia por uma localiza√ß√£o espec√≠fica, servi√ßos cadastrados ser√£o sempre mostrados, independente de sua localiza√ß√£o.''')
    
    nome_do_mecanico = input('\nDigite o nome do mec√¢nico que deseja cadastrar: ')
    categoria_mecanico = input(f'Digite a categoria do mec√¢nico {nome_do_mecanico} (Conserto; Venda de pe√ßas; Troca de √≥leo; Etc): ')
    avaliacao_mecanico = random.uniform(2, 5)  #Gera um n√∫mero aleat√≥rio entre 2 e 5
    orcamento_mecanico = f'R$ {random.uniform(300, 700):.2f}'  # Gera um n√∫mero float aleat√≥rio entre 300 e 700 e adiciona "R$" antes do n√∫mero
    avaliacao_mecanico = round(avaliacao_mecanico, 1)  # Arredonda o n√∫mero para uma casa decimal
    endereco_mecanico = input(f'Digite o endere√ßo (rua/avenida, n√∫mero) do mec√¢nico {nome_do_mecanico}: ')
    status_mecanico = input('O mec√¢nico cadastrado est√° aberto? (Essa op√ß√£o n√£o estar√° na vers√£o final, visto que o aplicativo j√° ter√° essa informa√ß√£o) ')

    if status_mecanico == 'Sim' or status_mecanico == 'sim' or status_mecanico == 'S' or status_mecanico == 's':
        status_mecanico = True
    else:
        status_mecanico = False

    dados_do_mecanico = {'nome':nome_do_mecanico, 'categoria':categoria_mecanico, 'avalia√ß√£o':avaliacao_mecanico, 'or√ßamento':orcamento_mecanico, 'endere√ßo':endereco_mecanico, 'aberto':status_mecanico}
    mecanicos.append (dados_do_mecanico)

    print(f'O mec√¢nico {dados_do_mecanico} foi cadastrado com sucesso!\n')
    
    voltar_ao_menu_principal()



def chamar_reboque():
    exibir_subtitulo('Emerg√™ncia')
    while True:
        permissao = input('\nVoc√™ permite que esse aparelho use a sua localiza√ß√£o? ')
        if permissao == 'Sim' or permissao == 'sim' or permissao == 'S' or permissao == 's':
            print('\nUm reboque est√° a caminho, n√£o desligue a sua localiza√ß√£o. ')
            break
        elif permissao == 'N√£o' or permissao == 'n√£o' or permissao == 'nao' or permissao == 'N' or permissao == 'n':
            print('\nListando mec√¢nicos abertos na sua √°rea:')
            for mecanico in mecanicos:
                if mecanico['aberto'] == True:
                    print(f'- {mecanico['nome']} | {mecanico['categoria']} | Avalia√ß√£o: {mecanico['avalia√ß√£o']} | {mecanico['or√ßamento']} | Endere√ßo: {mecanico['endere√ßo']} | {mecanico['aberto']}')
            voltar_ao_menu_principal()
        else:
            print('\nResposta inv√°lida. Por favor, responda com Sim ou N√£o. ')



def finalizar_app():
    exibir_subtitulo('Finalizando a aplica√ß√£o...')
    voltar_ao_menu_principal()


def entrar_no_menu_principal():
    print('\nLogin efetuado com sucesso!')
    input('\nDigite uma tecla para entrar no menu principal')
    main2()


def voltar_ao_menu_principal():
    input('\nDigite uma tecla para voltar ao menu principal ')
    main2()


def opcao_invalida():
    os.system('cls')
    print('Op√ß√£o inv√°lida!\n')
    voltar_ao_menu_principal()


def exibir_subtitulo(texto):
    os.system('cls')
    print(texto)
    print()


def main():
    os.system ('cls')
    efetuar_login()
    exibir_nome_do_programa()
    exibir_opcoes()
    escolher_opcoes()


def main2():
    os.system('cls')
    exibir_nome_do_programa()
    exibir_opcoes()
    escolher_opcoes()


if __name__ == '__main__':
    main()

